#include "FEX/fex_test_loader.hpp"

#define TWOBYTE_TEST(opcode)                                                                                                                         \
    CATCH_TEST_CASE("0F_" #opcode, "[TwoByte]") {                                                                                                    \
        FEXTestLoader::RunTest("ASM/TwoByte/0F_" #opcode ".asm");                                                                                    \
    }

TWOBYTE_TEST(02)

TWOBYTE_TEST(10)
TWOBYTE_TEST(10_2)
TWOBYTE_TEST(11)
TWOBYTE_TEST(12)
TWOBYTE_TEST(13)
TWOBYTE_TEST(13_2)
TWOBYTE_TEST(14)
TWOBYTE_TEST(15)
TWOBYTE_TEST(16)
TWOBYTE_TEST(17)

TWOBYTE_TEST(28)
TWOBYTE_TEST(29)
TWOBYTE_TEST(2A)
TWOBYTE_TEST(2B)
TWOBYTE_TEST(2C)
TWOBYTE_TEST(2D)
TWOBYTE_TEST(2E)
TWOBYTE_TEST(2F)
TWOBYTE_TEST(31)

TWOBYTE_TEST(40)
TWOBYTE_TEST(41)
TWOBYTE_TEST(42)
TWOBYTE_TEST(43)
TWOBYTE_TEST(44)
TWOBYTE_TEST(45)
TWOBYTE_TEST(46)
TWOBYTE_TEST(47)
TWOBYTE_TEST(48)
TWOBYTE_TEST(49)
TWOBYTE_TEST(4A)
TWOBYTE_TEST(4B)
TWOBYTE_TEST(4C)
TWOBYTE_TEST(4D)
TWOBYTE_TEST(4E)
TWOBYTE_TEST(4F)

TWOBYTE_TEST(50)
TWOBYTE_TEST(51)
TWOBYTE_TEST(52)
TWOBYTE_TEST(53)
TWOBYTE_TEST(54)
TWOBYTE_TEST(55)
TWOBYTE_TEST(56)
TWOBYTE_TEST(57)
TWOBYTE_TEST(58)
TWOBYTE_TEST(59)
TWOBYTE_TEST(5A)
TWOBYTE_TEST(5B)
TWOBYTE_TEST(5C)
TWOBYTE_TEST(5D)
TWOBYTE_TEST(5E)
TWOBYTE_TEST(5F)

TWOBYTE_TEST(60)
TWOBYTE_TEST(61)
TWOBYTE_TEST(62)
TWOBYTE_TEST(63)
TWOBYTE_TEST(64)
TWOBYTE_TEST(65)
TWOBYTE_TEST(66)
TWOBYTE_TEST(67)
TWOBYTE_TEST(68)
TWOBYTE_TEST(69)
TWOBYTE_TEST(6A)
TWOBYTE_TEST(6B)
TWOBYTE_TEST(6E)
TWOBYTE_TEST(6E_2)
TWOBYTE_TEST(6F)

TWOBYTE_TEST(70)
TWOBYTE_TEST(74)
TWOBYTE_TEST(75)
TWOBYTE_TEST(76)
TWOBYTE_TEST(7E)
TWOBYTE_TEST(7F)

TWOBYTE_TEST(80)
TWOBYTE_TEST(81)
TWOBYTE_TEST(82)
TWOBYTE_TEST(83)
TWOBYTE_TEST(84)
TWOBYTE_TEST(85)
TWOBYTE_TEST(86)
TWOBYTE_TEST(87)
TWOBYTE_TEST(88)
TWOBYTE_TEST(89)
TWOBYTE_TEST(8A)
TWOBYTE_TEST(8B)
TWOBYTE_TEST(8C)
TWOBYTE_TEST(8D)
TWOBYTE_TEST(8E)
TWOBYTE_TEST(8F)

TWOBYTE_TEST(90)
TWOBYTE_TEST(91)
TWOBYTE_TEST(92)
TWOBYTE_TEST(93)
TWOBYTE_TEST(94)
TWOBYTE_TEST(95)
TWOBYTE_TEST(96)
TWOBYTE_TEST(97)
TWOBYTE_TEST(98)
TWOBYTE_TEST(99)
TWOBYTE_TEST(9A)
TWOBYTE_TEST(9B)
TWOBYTE_TEST(9C)
TWOBYTE_TEST(9D)
TWOBYTE_TEST(9E)
TWOBYTE_TEST(9F)

TWOBYTE_TEST(A2)
TWOBYTE_TEST(A3)
TWOBYTE_TEST(A3_2)
TWOBYTE_TEST(A4)
TWOBYTE_TEST(A4_2)
TWOBYTE_TEST(A5)
TWOBYTE_TEST(A5_2)
TWOBYTE_TEST(A5_3)
TWOBYTE_TEST(A5_4)
TWOBYTE_TEST(A5_5)
TWOBYTE_TEST(A5_6)
TWOBYTE_TEST(A5_7)
TWOBYTE_TEST(AB)
TWOBYTE_TEST(AB_2)
TWOBYTE_TEST(AC)
TWOBYTE_TEST(AC_2)
TWOBYTE_TEST(AD)
TWOBYTE_TEST(AD_2)
TWOBYTE_TEST(AD_3)
TWOBYTE_TEST(AD_4)
TWOBYTE_TEST(AD_5)
TWOBYTE_TEST(AD_6)
TWOBYTE_TEST(AD_7)
TWOBYTE_TEST(AF)
TWOBYTE_TEST(AF_2)

TWOBYTE_TEST(B0)
TWOBYTE_TEST(B0_2)
// TWOBYTE_TEST(B0_3) // unaligned stuff...
// TWOBYTE_TEST(B0_4)
TWOBYTE_TEST(B0_8)
TWOBYTE_TEST(B0_9)
TWOBYTE_TEST(B0_10)
TWOBYTE_TEST(B0_11)
TWOBYTE_TEST(B3)
TWOBYTE_TEST(B3_2)
TWOBYTE_TEST(B6)
TWOBYTE_TEST(B7)
TWOBYTE_TEST(BB)
TWOBYTE_TEST(BB_2)
TWOBYTE_TEST(BC)
TWOBYTE_TEST(BD)
TWOBYTE_TEST(BE)
TWOBYTE_TEST(BF)

TWOBYTE_TEST(C0)
TWOBYTE_TEST(C0_2)
TWOBYTE_TEST(C2)
TWOBYTE_TEST(C3)
TWOBYTE_TEST(C4)
TWOBYTE_TEST(C4_2)
TWOBYTE_TEST(C5)
TWOBYTE_TEST(C5_2)
TWOBYTE_TEST(C6)

TWOBYTE_TEST(D1)
TWOBYTE_TEST(D2)
TWOBYTE_TEST(D3)
TWOBYTE_TEST(D5)
TWOBYTE_TEST(D7)
TWOBYTE_TEST(D8)
TWOBYTE_TEST(D9)
TWOBYTE_TEST(DA)
TWOBYTE_TEST(DB)
TWOBYTE_TEST(DC)
TWOBYTE_TEST(DD)
TWOBYTE_TEST(DE)
TWOBYTE_TEST(DF)

TWOBYTE_TEST(E0)
TWOBYTE_TEST(E1)
TWOBYTE_TEST(E2)
TWOBYTE_TEST(E3)
TWOBYTE_TEST(E4)
TWOBYTE_TEST(E5)
TWOBYTE_TEST(E7)
TWOBYTE_TEST(E8)
TWOBYTE_TEST(E9)
TWOBYTE_TEST(EA)
TWOBYTE_TEST(EB)
TWOBYTE_TEST(EC)
TWOBYTE_TEST(ED)
TWOBYTE_TEST(EE)
TWOBYTE_TEST(EF)

TWOBYTE_TEST(F1)
TWOBYTE_TEST(F2)
TWOBYTE_TEST(F3)
TWOBYTE_TEST(F4)
TWOBYTE_TEST(F5)
TWOBYTE_TEST(F6)
TWOBYTE_TEST(F6_2)
TWOBYTE_TEST(F8)
TWOBYTE_TEST(F9)
TWOBYTE_TEST(FA)
TWOBYTE_TEST(FB)
TWOBYTE_TEST(FC)
TWOBYTE_TEST(FD)
TWOBYTE_TEST(FE)
