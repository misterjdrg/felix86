#include "FEX/fex_test_loader.hpp"

#define PRIMARY_TEST(opcode)                                                                                                                         \
    CATCH_TEST_CASE(#opcode, "[Primary]") {                                                                                                          \
        FEXTestLoader::RunTest("ASM/Primary/Primary_" #opcode ".asm");                                                                               \
    }

#define PRIMARY_TEST_NO_PREFIX(opcode)                                                                                                               \
    CATCH_TEST_CASE(#opcode, "[Primary]") {                                                                                                          \
        FEXTestLoader::RunTest("ASM/Primary/" #opcode ".asm");                                                                                       \
    }

#define PRIMARY_TEST_BASE(name)                                                                                                                      \
    CATCH_TEST_CASE(#name, "[Primary]") {                                                                                                            \
        FEXTestLoader::RunTest("ASM/" #name ".asm");                                                                                                 \
    }

#define PRIMARY_TEST32(opcode)                                                                                                                       \
    CATCH_TEST_CASE(#opcode, "[Primary32]") {                                                                                                        \
        FEXTestLoader::RunTest("32Bit_ASM/Primary/Primary_" #opcode ".asm");                                                                         \
    }

#define PRIMARY_TEST32_BASE(opcode)                                                                                                                  \
    CATCH_TEST_CASE(#opcode, "[Primary32]") {                                                                                                        \
        FEXTestLoader::RunTest("32Bit_ASM/Primary/" #opcode ".asm");                                                                                 \
    }

#define PRIMARY_TEST_KNOWN_FAILURE(opcode)

PRIMARY_TEST(00)
PRIMARY_TEST(08)
PRIMARY_TEST(10)
PRIMARY_TEST(10_2)
PRIMARY_TEST(10_3)
PRIMARY_TEST(10_4)
PRIMARY_TEST(18)
PRIMARY_TEST(18_2)
PRIMARY_TEST(18_3)
PRIMARY_TEST(18_4)
PRIMARY_TEST(20)
PRIMARY_TEST(28)
PRIMARY_TEST(30)
PRIMARY_TEST(38)
PRIMARY_TEST(3A)
PRIMARY_TEST(3B)
PRIMARY_TEST(3C)
PRIMARY_TEST(3D)
PRIMARY_TEST(50)
PRIMARY_TEST(50_2)
PRIMARY_TEST(63)
PRIMARY_TEST(68)
PRIMARY_TEST(69)
PRIMARY_TEST(6A)
PRIMARY_TEST(6A_2)
PRIMARY_TEST(6B)
PRIMARY_TEST(84)
PRIMARY_TEST(84_2)
PRIMARY_TEST(85)
PRIMARY_TEST(86)
PRIMARY_TEST(87)
PRIMARY_TEST(87_2)
PRIMARY_TEST(87_3)
PRIMARY_TEST(8D)
PRIMARY_TEST(8D_2)
PRIMARY_TEST(90)
PRIMARY_TEST(90_2)
PRIMARY_TEST(90_3)
PRIMARY_TEST(90_4)
PRIMARY_TEST(98)
PRIMARY_TEST(98_2)
PRIMARY_TEST(99)
PRIMARY_TEST(99_2)
PRIMARY_TEST(9B)
PRIMARY_TEST(9E)
PRIMARY_TEST(A0)
PRIMARY_TEST(A2)
PRIMARY_TEST(A4)
PRIMARY_TEST(A4_REP)
PRIMARY_TEST(A4_REP_many)
PRIMARY_TEST(A4_REPNE)
PRIMARY_TEST(A4_REPNE_many)
PRIMARY_TEST(A4_REP_Down)
PRIMARY_TEST(A4_REPNE_Down)
PRIMARY_TEST(A5)
PRIMARY_TEST(A5_dword)
PRIMARY_TEST(A5_qword)
PRIMARY_TEST(A5_REP)
PRIMARY_TEST(A5_dword_REP)
PRIMARY_TEST(A5_qword_REP)
PRIMARY_TEST(A5_REPNE)
PRIMARY_TEST(A5_dword_REPNE)
PRIMARY_TEST(A5_qword_REPNE)
PRIMARY_TEST(A5_REP_Down)
PRIMARY_TEST(A5_REPNE_Down)
PRIMARY_TEST(A5_dword_REP_Down)
PRIMARY_TEST(A5_dword_REPNE_Down)
PRIMARY_TEST(A5_qword_REP_Down)
PRIMARY_TEST(A5_qword_REPNE_Down)
PRIMARY_TEST(A8)
PRIMARY_TEST(A9)
PRIMARY_TEST(AA)
PRIMARY_TEST(AA_REP)
PRIMARY_TEST(AA_REP_down)
PRIMARY_TEST(AA_REPNE)
PRIMARY_TEST(AA_REPNE_down)
PRIMARY_TEST(AB_word)
PRIMARY_TEST(AB_dword)
PRIMARY_TEST(AB_qword)
PRIMARY_TEST(AB_word_REP)
PRIMARY_TEST(AB_dword_REP)
PRIMARY_TEST(AB_qword_REP)
PRIMARY_TEST(AB_word_REPNE)
PRIMARY_TEST(AB_dword_REPNE)
PRIMARY_TEST(AB_qword_REPNE)
PRIMARY_TEST(AB_word_REP_down)
PRIMARY_TEST(AB_dword_REP_down)
PRIMARY_TEST(AB_qword_REP_down)
PRIMARY_TEST(AB_word_REPNE_down)
PRIMARY_TEST(AB_dword_REPNE_down)
PRIMARY_TEST(AB_qword_REPNE_down)
PRIMARY_TEST(AD_word)
PRIMARY_TEST(AD_dword)
PRIMARY_TEST(AD_qword)
// PRIMARY_TEST(AD_REP_word)
// PRIMARY_TEST(AD_REP_dword)
// PRIMARY_TEST(AD_REP_qword)
// PRIMARY_TEST(AD_REPNE_word)
// PRIMARY_TEST(AD_REPNE_dword)
// PRIMARY_TEST(AD_REPNE_qword)
// PRIMARY_TEST(AD_REP_word_down)
// PRIMARY_TEST(AD_REP_dword_down)
// PRIMARY_TEST(AD_REP_qword_down)
// PRIMARY_TEST(AD_REPNE_word_down)
// PRIMARY_TEST(AD_REPNE_dword_down)
// PRIMARY_TEST(AD_REPNE_qword_down)
PRIMARY_TEST(AE)
PRIMARY_TEST(AE_REP)
PRIMARY_TEST(AE_REP_down)
PRIMARY_TEST(AE_REPNE)
PRIMARY_TEST(AE_REPNE_down)
PRIMARY_TEST(AF_REP_word)
PRIMARY_TEST(AF_REP_dword)
PRIMARY_TEST(AF_REP_qword)
PRIMARY_TEST(A6)
PRIMARY_TEST(A6_down)
PRIMARY_TEST(A6_REP)
PRIMARY_TEST(A6_REPNE)
PRIMARY_TEST(A6_REP_Equal)
PRIMARY_TEST(A6_REPNE_Equal)
PRIMARY_TEST(A6_REP_down)
PRIMARY_TEST(A6_REP_down_Equal)
PRIMARY_TEST(A6_REP_Smaller)
PRIMARY_TEST(A7_word)
PRIMARY_TEST(A7_word_down)
PRIMARY_TEST(A7_dword)
PRIMARY_TEST(A7_dword_down)
PRIMARY_TEST(A7_qword)
PRIMARY_TEST(A7_qword_down)
PRIMARY_TEST(B0)
PRIMARY_TEST(B8)
PRIMARY_TEST(B8_2)
PRIMARY_TEST(B8_3)
PRIMARY_TEST(C2)
PRIMARY_TEST(C3)
// PRIMARY_TEST(C8) TODO: fix ENTER
// PRIMARY_TEST(C8_2)
PRIMARY_TEST(C9)
PRIMARY_TEST(CF)
PRIMARY_TEST(D7)
PRIMARY_TEST(E0)
PRIMARY_TEST(E1)
PRIMARY_TEST(E2)
PRIMARY_TEST(E3)
PRIMARY_TEST(E8)
PRIMARY_TEST(E9)
PRIMARY_TEST(EB)
PRIMARY_TEST(F5)
PRIMARY_TEST(F8)
PRIMARY_TEST(F9)
PRIMARY_TEST(FC)
PRIMARY_TEST(FD)

PRIMARY_TEST_BASE(lea)
PRIMARY_TEST_BASE(movups)
PRIMARY_TEST_BASE(movzx)
PRIMARY_TEST_BASE(pslldq)
PRIMARY_TEST_BASE(jump)
PRIMARY_TEST_BASE(JMP)
PRIMARY_TEST_BASE(mov)
PRIMARY_TEST_BASE(MOVHPD)
PRIMARY_TEST_BASE(STOS_REPNE)
PRIMARY_TEST_BASE(STOS)
PRIMARY_TEST_BASE(STOSQ)
PRIMARY_TEST_BASE(STOSQ2)
PRIMARY_TEST_BASE(STOSQ_REPNE)
PRIMARY_TEST_BASE(STOSQ2_REPNE)

PRIMARY_TEST_NO_PREFIX(SHL)
PRIMARY_TEST_NO_PREFIX(SHR)
PRIMARY_TEST_NO_PREFIX(ROL_Flags)
PRIMARY_TEST_NO_PREFIX(ROL_OF)
PRIMARY_TEST_NO_PREFIX(ROR_Flags)
PRIMARY_TEST_NO_PREFIX(ROR_OF)
PRIMARY_TEST_NO_PREFIX(Pause)

// Need unaligned atomics
PRIMARY_TEST_KNOWN_FAILURE(01_Atomic16)
PRIMARY_TEST_KNOWN_FAILURE(01_Atomic32)
PRIMARY_TEST_KNOWN_FAILURE(01_Atomic64)
PRIMARY_TEST_KNOWN_FAILURE(09_Atomic16)
PRIMARY_TEST_KNOWN_FAILURE(09_Atomic32)
PRIMARY_TEST_KNOWN_FAILURE(09_Atomic64)
PRIMARY_TEST_KNOWN_FAILURE(23_Atomic16)
PRIMARY_TEST_KNOWN_FAILURE(23_Atomic32)
PRIMARY_TEST_KNOWN_FAILURE(23_Atomic64)
PRIMARY_TEST_KNOWN_FAILURE(29_Atomic16)
PRIMARY_TEST_KNOWN_FAILURE(29_Atomic32)
PRIMARY_TEST_KNOWN_FAILURE(29_Atomic64)
PRIMARY_TEST_KNOWN_FAILURE(31_Atomic16)
PRIMARY_TEST_KNOWN_FAILURE(31_Atomic32)
PRIMARY_TEST_KNOWN_FAILURE(31_Atomic64)
PRIMARY_TEST_KNOWN_FAILURE(87_Atomic16)
PRIMARY_TEST_KNOWN_FAILURE(87_Atomic32)
PRIMARY_TEST_KNOWN_FAILURE(87_Atomic64)

PRIMARY_TEST32(00)
PRIMARY_TEST32(00_2)
PRIMARY_TEST32(00_3)
PRIMARY_TEST32(8D)
PRIMARY_TEST32(A0)
PRIMARY_TEST32(A2)
PRIMARY_TEST32(E3)
PRIMARY_TEST32(C9)
PRIMARY_TEST32(CF)
PRIMARY_TEST32_BASE(Pop_Segments)
